@page "/"

@inject IDataService data

<PageTitle>Список задач</PageTitle>

<h3>Список задач</h3>

@if (tasks == null)
{
    <p>Loading ...</p>
}
else
{
    <div>
        <button type="button" class="btn btn-success" @onclick="AddTaskItemAsync">Новая задача</button>
    </div>
    @foreach (var task in tasks)
    {
        <div class="card" style="width: 18rem;">
            <button type="button" class="btn-close" aria-label="Close" 
                style="scale: 0.7; position: absolute; right: 0; margin: 10px 10px 0 0" @onclick="() => RemoveTaskItemAsync(task)"></button>
            <TaskCard TaskItem="task" />
        </div>
    }
}

@code {
    IEnumerable<TaskItemDTO>? tasks;

    protected override async Task OnInitializedAsync()
    {
        tasks = await data.GetDataAsync();
    }

    async Task AddTaskItemAsync()
    {
        int lastTaskId = tasks!.Any() ? tasks!.Last().Id : 0;

        TaskItemDTO newTask = new() { Id = lastTaskId+1, Name = $"Задача {lastTaskId+1}", Description = $"Описание {lastTaskId+1}", Text = "Lorem ipsum dolor sit amet consectetur adipisicing elit." };
        await data.AddAsync(newTask);
    }

    async Task RemoveTaskItemAsync(TaskItemDTO task) {
        await data.RemoveAsync(task);
        tasks = await data.GetDataAsync();
    }
}
