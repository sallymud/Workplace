@page "/"

@inject TimeTableDataService data

<PageTitle>Расписание</PageTitle>

@if (weeks == null)
{
    <p>Loading ...</p>
}
else
{
    <div class="container" style="display: flex; justify-content: center; flex-direction: coloumn; flex-wrap: wrap; width: 500px;">
        @foreach (var ttd in weeks[currentWeekID].DaysInWeek!)
        {
            <div class="card" style="width: 500px; margin-bottom: 20px;">
                <TimeTableDayCard TimeTableDay="ttd"/>
            </div>
        }
    </div>
}

@code {
    List<TimeTableWeek>? weeks { get; set; }
    [Parameter]
    public int currentWeekID { get; set; }

    protected override async Task OnInitializedAsync()
    {
        weeks = await data.GetDataAsync();

        foreach (var ttw in weeks)
        {
            var dateNow = DateOnly.FromDateTime(DateTime.Now);
            var dateInWeek = ttw.DaysInWeek![0].Date;
            if (dateInWeek.DayNumber - dateNow.DayNumber <= 0)
                currentWeekID = ttw.Id;
        }
    }
}
