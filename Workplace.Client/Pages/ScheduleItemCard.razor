<div class="card" style="margin-bottom: 10px; padding: 10px;">
    <h6 style="font-weight: 700;">@TTItem!.LessonInfo!.Name <span style="opacity: 0.6;">@TTItem.Time - @TTItem.Time.Add(new TimeSpan(1, 35, 0))</span></h6>
    @if (TTItem.LT == LessonType.Практика)
    {
        <h6 style="background-color: #9ec5fe; width: 80px; text-align: center; border-radius: 2px;">@TTItem.LT</h6>
    }
    else if (TTItem.LT == LessonType.Лабораторная_работа)
    {
        <h6 style="background-color: #fecba1; width: 180px; text-align: center; border-radius: 2px;">@TTItem.LT</h6>
    }
    else if (TTItem.LT == LessonType.Лекция)
    {
        <h6 style="background-color: #a6e9d5; width: 65px; text-align: center; border-radius: 2px;">@TTItem.LT</h6>
    }
    else if (TTItem.LT == LessonType.Экзамен)
    {
        <h6 style="background-color: #c5b3e6; width: 75px; text-align: center; border-radius: 2px;">@TTItem.LT</h6>
    }
    else
    {
        <h6 style="background-color: #f1aeb5; width: 115px; text-align: center; border-radius: 2px;">@TTItem.LT</h6>
    }
    <h6>@TTItem.Location</h6>
    <h6 style="font-style: italic; opacity: 0.6;">@TTItem.LessonInfo.Teachers![(int)TTItem.LT > 2 ? (int)TTItem.LT - 3 : (int)TTItem.LT]</h6>
    <div class="card" style="border-color: #8540f5;">
            <div class="card-header" style="background-color: #e0cffc;">
                <button type="button" class="btn btn-link" style="text-decoration: none; color: #000; border: none; width: 100%;" @onclick="ChangeOpenStudents"> Количество участников: @TTItem.Students!.Count()</button>
            </div>
        @if (openStudents)
        {
            <ul class="list-group list-group-flush" style="border-color: #8540f5;">
                @foreach (var std in TTItem.Students!)
                {
                    <li class="list-group-item" style="overflow-wrap: break-word;">@std.Name <span style="opacity: 0.6; position: absolute; right: 0; margin-right: 15px;">@std.Group</span></li>
                }
            </ul>
        }
    </div>
</div>
@code {
    [Parameter]
    public ScheduleItem? TTItem { get; set; }
    [Parameter]
    public bool openStudents { get; set; } = false;

    public async Task ChangeOpenStudents()
    {
        await Task.Run(() => openStudents = !openStudents);
    }
}